#include "CMP3_MCI.h"
#include <GL/glut.h>
#include <stdio.h>
#include "glm.h"
#include <opencv/highgui.h>
#include <opencv/cv.h>
CMP3_MCI mp3;
float NewAngle[20],OldAngle[20];
float  dx=0, dy=0 ,dz=0, oldX=0 , oldY=0;
GLuint tex1 , tex2, tex3, tex4 , tex5;
int myTexture(char * filename)///貼上圖
{
    IplImage * img = cvLoadImage(filename); ///OpenCV讀圖
    cvCvtColor(img,img, CV_BGR2RGB); ///OpenCV轉色彩 (需要cv.h)
    glEnable(GL_TEXTURE_2D); ///1. 開啟貼圖功能
    GLuint id; ///準備一個 unsigned int 整數, 叫 貼圖ID
    glGenTextures(1, &id); /// 產生Generate 貼圖ID
    glBindTexture(GL_TEXTURE_2D, id); ///綁定bind 貼圖ID
    glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_REPEAT); /// 貼圖參數, 超過包裝的範圖T, 就重覆貼圖
    glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_REPEAT); /// 貼圖參數, 超過包裝的範圖S, 就重覆貼圖
    glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST); /// 貼圖參數, 放大時的內插, 用最近點
    glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST); /// 貼圖參數, 縮小時的內插, 用最近點
    glTexImage2D(GL_TEXTURE_2D, 0, GL_RGB, img->width, img->height, 0, GL_RGB, GL_UNSIGNED_BYTE, img->imageData);
    return id;
}
GLMmodel * pmodel = NULL;///重要設物件指標
GLMmodel * head = NULL;
GLMmodel * body1 = NULL;GLMmodel * body2 = NULL;
GLMmodel * arm1 = NULL;GLMmodel * arm2 = NULL;
GLMmodel * hand1 = NULL; GLMmodel * hand2 = NULL;
GLMmodel * leg1 = NULL;GLMmodel * leg2 = NULL;
GLMmodel * knee1 = NULL; GLMmodel * knee2 = NULL;
GLMmodel * hair = NULL;
GLMmodel * myReadOne(char * filename)///讀大檔案
{
    GLMmodel * one = NULL;
    if(one == NULL)
    {
        one = glmReadOBJ(filename);
       /// glmUnitize(pmodel);///用scale 把模型縮放
        glmScale(one,1/26.0);
        glmFacetNormals(one);
        glmVertexNormals(one,90);
    }
    return one;
}
void myReadAll()
{
     pmodel = myReadOne("data/people_uv.obj");
     head = myReadOne("data/head.obj");
     arm1 = myReadOne("data/right_u_hand.obj");
     arm2 = myReadOne("data/left_u_hand.obj");
     hand1 = myReadOne("data/right_d_hand.obj");
     hand2 = myReadOne("data/left_d_hand.obj");
     leg1 = myReadOne("data/right_u_leg.obj");
     leg2 = myReadOne("data/left_u_leg.obj");
     knee1 = myReadOne("data/right_d_leg.obj");
     knee2 = myReadOne("data/left_d_leg.obj");
     body1 = myReadOne("data/body_u.obj");
     body2 = myReadOne("data/body_d.obj");
     hair = myReadOne("data/hair.obj");

}

const GLfloat light_ambient[]  = { 0.0f, 0.0f, 0.0f, 1.0f };
const GLfloat light_diffuse[]  = { 1.0f, 1.0f, 1.0f, 1.0f };
const GLfloat light_specular[] = { 1.0f, 1.0f, 1.0f, 1.0f };
const GLfloat light_position[] = { 2.0f, 5.0f, 5.0f, 0.0f };///Z的值改成負的 打光從正面打

const GLfloat mat_ambient[]    = { 0.7f, 0.7f, 0.7f, 1.0f };
const GLfloat mat_diffuse[]    = { 0.8f, 0.8f, 0.8f, 1.0f };
const GLfloat mat_specular[]   = { 1.0f, 1.0f, 1.0f, 1.0f };
const GLfloat high_shininess[] = { 100.0f };

void myLight()
{
    glEnable(GL_DEPTH_TEST);
    glDepthFunc(GL_LESS);

    glEnable(GL_LIGHT0);
    glEnable(GL_NORMALIZE);
    glEnable(GL_COLOR_MATERIAL);
    glEnable(GL_LIGHTING);

    glLightfv(GL_LIGHT0, GL_AMBIENT,  light_ambient);
    glLightfv(GL_LIGHT0, GL_DIFFUSE,  light_diffuse);
    glLightfv(GL_LIGHT0, GL_SPECULAR, light_specular);
    glLightfv(GL_LIGHT0, GL_POSITION, light_position);

    glMaterialfv(GL_FRONT, GL_AMBIENT,   mat_ambient);
    glMaterialfv(GL_FRONT, GL_DIFFUSE,   mat_diffuse);
    glMaterialfv(GL_FRONT, GL_SPECULAR,  mat_specular);
    glMaterialfv(GL_FRONT, GL_SHININESS, high_shininess);
}

void reshape(int w , int h)///投影相關 保持螢幕拉大拉小的比例
{


    float ar = (float)w/(float)h;
    glViewport(0,0,w,h);
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    gluPerspective(60, ar, 0.1, 100.0);

    glMatrixMode(GL_MODELVIEW);
    glLoadIdentity() ;
    gluLookAt(0,0,2 ,0,0,0, 0,1,0);
}

float angleX[20], angleY[20];
int angleID = 0 ;
float  angle[20];
FILE * fout = NULL, * fin = NULL;
void myWrite(){///每呼叫一次myWrite()
    if( fout == NULL ) fout = fopen("file.txt", "w+");

    for(int i=0; i<20; i++){
        printf("%.1f %.1f", angleX[i] ,angleY[i]);///小黑印出來
        fprintf(fout, "%.1f %.1f", angleX[i],angleY[i] );///檔案印出來
    }///印出20個數字

    printf("\n");///每呼叫一次, 小黑跳行
     fprintf(fout, "\n");///每呼叫一次, 檔案也跳行


}

void myRead(){
    if( fout != NULL ) { fclose(fout); fout=NULL; }
    if( fin == NULL ) fin = fopen("file.txt", "r");
    for(int i=0; i<20; i++){
        OldAngle[i] = NewAngle[i]; ///原來的新的,變舊
        fscanf(fin, "%f", &NewAngle[i] );///讀到新的角度
        ///fscanf(fin, "%f", &angle[i] );
    }
    glutPostRedisplay();///重畫畫面
}
void myInterpolate(float alpha){
    for(int i=0; i<20; i++){
        angleX[i] = alpha * NewAngle[i] + (1-alpha) * OldAngle[i];
        angleY[i] = alpha * NewAngle[i] + (1-alpha) * OldAngle[i];
    }
}

///int t=0;
void timer(int t){
    if( t%25==0 ) myRead();
    myInterpolate( (t%25)/25.0 );

    glutTimerFunc(30, timer, t+1 );
   glutPostRedisplay();
}
void keyboard(unsigned char  key , int x, int y)
{
    if( key=='p' ){///Play
        myRead();
        glutTimerFunc( 0, timer, 0 );
        ///if(t%30==0) myRead();
        ///myInterpolate(  (t%30)/30.0  ); ///介於 0.0~1.0
        ///glutPostRedisplay();
        ///t++;
    }
    if( key=='s' ) myWrite();///調好動作,才Save存檔
    if( key=='r' ) myRead();
    if(key=='0') angleID = 0;
    if(key=='1') angleID = 1;
    if(key=='2') angleID = 2;
    if(key=='3') angleID = 3;
    if(key=='4') angleID = 4;
    if(key=='5') angleID = 5;
    if(key=='6') angleID = 6;
    if(key=='7') angleID = 7;
    if(key=='8') angleID = 8;
    if(key=='9') angleID = 9;
    if(key=='q') angleID = 10;
    if(key=='a') angleID = 11;

}
void mouse(int button , int state , int x, int y)
{

        oldX = x;
        oldY = y;

}
void motion(int x, int y )
{
    dx+= (x-oldX)/150.0;   dy-=(y-oldY)/150.0;
    angleX[angleID]+=(x-oldX);
    angleY[angleID]+=(y-oldY);
   /// printf("glTranslatef(%.2f , %.2f , %.2f );\n",dx,dy,dz);
    oldX =x;   oldY=y;



  ///  glMatrixMode(GL_MODELVIEW);///3D Model+View
   /// glLoadIdentity() ;
   /// gluLookAt((x-150)/150.0, (y-150)/150.0, 3, ///eye
          //   0, 0, 0, ///center看哪裡
        ///    0, 1, 0);///up向量
glutPostRedisplay();///請重畫畫面
}


void display()
{

    glClear(GL_COLOR_BUFFER_BIT|GL_DEPTH_BUFFER_BIT);


    glBindTexture(GL_TEXTURE_2D, tex1);

    glBegin(GL_POLYGON);
    glTexCoord2f(0.0, 0.0); glVertex2f(-1.0, 1.0); // 左下角
    glTexCoord2f(0.0, 1.0); glVertex2f(-1.0, -1.0); // 右下角
    glTexCoord2f(1.0, 1.0); glVertex2f(1.0, -1.0); // 右上角
    glTexCoord2f(1.0, 0.0); glVertex2f(1.0, 1.0); // 左上角
    glEnd();



    ///glmDraw(pmodel , GLM_TEXTURE| GLM_SMOOTH);///超重要的一行 畫出來 GLM_TEXTURE之後用好要加進去

    glPushMatrix();
    {

            glTranslatef(0.03 , -0.41 , 1 );
      glPushMatrix();
    glBindTexture(GL_TEXTURE_2D , tex5);
            glTranslatef(-0.00 , 0.61 , 0.00 );
            glRotatef(angleX[0],0,1,0);
            glRotatef(angleY[0],1,0,0);
            glTranslatef(-0.00 , -0.61 , 0.00 );

            glmDraw(head ,GLM_TEXTURE | GLM_SMOOTH);///頭

            glPushMatrix();
            glBindTexture(GL_TEXTURE_2D , tex3);
            glTranslatef(-0.00 , 0.70 , 0.00 );
            glRotatef(angleX[11],0,1,0);
            glRotatef(angleY[11],1,0,0);
            glTranslatef(-0.00 , -0.70 , 0.00 );
            glmDraw(hair ,GLM_TEXTURE | GLM_SMOOTH);///頭髮


    glPopMatrix();
    glPopMatrix();
    glBindTexture(GL_TEXTURE_2D , tex4);
    glPushMatrix();
           glTranslatef(0.00 , 0.61 , 0.00 );
            glRotatef(angleX[1],0,1,0);
            glRotatef(angleY[1],1,0,0);
            glTranslatef(-0.00 , -0.61 , 0.00 );
            glmDraw(body1 ,GLM_TEXTURE | GLM_SMOOTH);///身體1

glBindTexture(GL_TEXTURE_2D , tex2);
             glPushMatrix();///右上部位
        glTranslatef(0.05 , 0.57 , 0.00 );///右上手
        glRotatef(angleX[3],0,1,0);
        glRotatef(angleY[3],1,0,0);
        glTranslatef(-0.05 , -0.57 , 0.00 );
        glmDraw(arm1, GLM_TEXTURE | GLM_SMOOTH);


            glPushMatrix();///右下手
            glTranslatef(0.11 , 0.50 , 0.00 );
            glRotatef(angleX[4],0,1,0);
            glRotatef(angleY[4],1,0,0);
            glTranslatef(-0.11 , -0.50 , 0.00 );
            glmDraw(hand1, GLM_TEXTURE | GLM_SMOOTH);
        glPopMatrix();
    glPopMatrix();

    glPushMatrix();///左上部位
        glTranslatef(-0.05 , 0.57 , 0.00 );///左上手
        glRotatef(angleX[5],0,1,0);
        glRotatef(angleY[5],1,0,0);
        glTranslatef(0.05 , -0.57 , 0.00 );
        glmDraw(arm2, GLM_TEXTURE | GLM_SMOOTH);


        glPushMatrix();///左下手
            glTranslatef(-0.12 , 0.48 , 0.00 );
            glRotatef(angleX[6],0,1,0);
            glRotatef(angleY[6],1,0,0);
            glTranslatef(0.12 , -0.48 , 0.00 );
            glmDraw(hand2, GLM_TEXTURE | GLM_SMOOTH);
        glPopMatrix();
    glPopMatrix();
glBindTexture(GL_TEXTURE_2D , tex4);
        glPushMatrix();
            glTranslatef(0.00 , 0.42 , 0.00 );
            glRotatef(angleX[2],0,1,0);
            glRotatef(angleY[2],1,0,0);
            glTranslatef(-0.00 , -0.42 , 0.00 );
            glmDraw(body2 ,GLM_TEXTURE | GLM_SMOOTH);///身體2
glBindTexture(GL_TEXTURE_2D , tex2);
            glPushMatrix();///右下部位
              glTranslatef(0.03 , 0.38 , 0.00 );///右上腳
                glRotatef(angleX[7],0,1,0);
                glRotatef(angleY[7],1,0,0);
                glTranslatef(-0.03 , -0.38 , 0.00 );
                glmDraw(leg1, GLM_TEXTURE | GLM_SMOOTH);

            glPushMatrix();///右下腳
            glTranslatef(0.07 , 0.23 , 0.00 );
            glRotatef(angleX[8],0,1,0);
            glRotatef(angleY[8],1,0,0);
            glTranslatef(-0.07 , -0.23 , 0.00 );
            glmDraw(knee1 ,  GLM_SMOOTH);///!!!!!!!!!!!!!!有問題!!!!!!
            glPopMatrix();
            glPopMatrix();
        glPushMatrix();///左下部位
                glTranslatef(-0.03 , 0.38 , 0.00 );///左上腳
                glRotatef(angleX[9],0,1,0);
                glRotatef(angleY[9],1,0,0);
                glTranslatef(0.03 , -0.38 , 0.00 );
                glmDraw(leg2, GLM_TEXTURE | GLM_SMOOTH);

        glPushMatrix();///左下腳
           glTranslatef(-0.07 , 0.23 , 0.00 );
            glRotatef(angleX[10],0,1,0);
            glRotatef(angleY[10],1,0,0);
            glTranslatef(0.07 , -0.23 , 0.00 );
            glmDraw(knee2 , GLM_TEXTURE | GLM_SMOOTH);
        glPopMatrix();
        glPopMatrix();


        glPopMatrix();///身體2的
    glPopMatrix();
  /// glutSolidSphere(0.01,20,20);
glPopMatrix();
    }

   // glEnable(GL_TEXTURE_2D);///再開貼圖
    glutSwapBuffers();
}

int main(int argc,char* argv[])
{


    glutInit(&argc,argv);
    glutInitDisplayMode(GLUT_RGB|GLUT_DOUBLE|GLUT_DEPTH);
    glutInitWindowSize(640, 480);
    glutCreateWindow("finally homework");
    glEnable(GL_DEPTH_TEST);

    glutMouseFunc(mouse);
    glutMotionFunc(motion);
    glutKeyboardFunc(keyboard);
    glutDisplayFunc(display);
    glutReshapeFunc(reshape);///透視投影機
    myLight();///打光
    tex1 = myTexture("data/300.jpg");
    tex2 = myTexture("data/body.jpg");
    tex3 = myTexture("data/hair.png");
    tex4 = myTexture("data/clothe.png");
    tex5 = myTexture("data/face.png");
    myReadAll();
    mp3.Load("koi.mp3");
    mp3.Play();




    glutMainLoop();
}
